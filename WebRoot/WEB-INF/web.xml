<?xml version="1.0" encoding="UTF-8" ?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">

    <display-name>SanyPDP Web Application</display-name>
	<listener>
	<description><![CDATA[应用销毁监听器：
		在应用销毁之前调用系统shutdown 回调函数，前提是所有的shutdown回调函数
		是通过以下方法注册：
		BaseApplicationContext.addShutdownHook(new Runnable(){

				@Override
				public void run() {
					
					try {
						stop();
					

					} catch (Throwable e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}});]]>
		
	</description>
	<listener-class>org.frameworkset.web.listener.ApplicationLifeListener</listener-class>
	</listener>
	
	 <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
        <param-name>exclusions</param-name>
        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,*.html</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
    <filter>
	    <filter-name>CharsetEncoding</filter-name>
	    <filter-class>com.frameworkset.common.filter.CharsetEncodingFilter</filter-class>
	    <init-param>
	      <param-name>RequestEncoding</param-name>
	      <param-value>UTF-8</param-value>
	    </init-param>
	    <init-param>
	      <param-name>ResponseEncoding</param-name>
	      <param-value>UTF-8</param-value>
	    </init-param>
	    <init-param>
	      <param-name>mode</param-name>
	      <param-value>0</param-value>
	    </init-param>  
	    <init-param>
	      <param-name>checkiemodeldialog</param-name>
	      <param-value>true</param-value>
	      
	    </init-param>
	   
	    <init-param>
	      <param-name>wallfilterrules</param-name>
	      <param-value><![CDATA[><,%3E%3C,<iframe,%3Ciframe,<script,%3Cscript,<img,%3Cimg,alert(,alert%28,eval(,eval%28,style=,style%3D]]>
	      </param-value>
	      
	    </init-param>
	    
	    <init-param>
	      <param-name>wallwhilelist</param-name>
	      <param-value><![CDATA[content,fileContent]]>
	      </param-value>
	      
	    </init-param>
	    
    </filter>

 
  <filter-mapping>
    <filter-name>CharsetEncoding</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CharsetEncoding</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CharsetEncoding</filter-name>
    <url-pattern>*.frame</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CharsetEncoding</filter-name>
    <url-pattern>*.page</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CharsetEncoding</filter-name>
    <url-pattern>*.freepage</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CharsetEncoding</filter-name>
    <url-pattern>/cxfservices/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>securityFilter</filter-name>
    <filter-class>com.frameworkset.platform.security.SYSAuthenticateFilter</filter-class>
    <init-param>
      <param-name>patternsExclude</param-name>
      <param-value>
    		/sysmanager/logoutredirect.jsp,
    		/login.jsp,
    		/login_en.jsp,
    		/logout.jsp,
    		/webseal/websealloginfail.jsp,
    		/webseal/message.jsp,
    		/test/testmmssso.jsp,
    		/sso/login.jsp,
    		/sso/sso.page,
    		/sanydesktop/cookieLocale.page,
    		/yzm.jsp,
		   /sysmanager/password/modifyExpiredUserPWD.jsp,
		  /passward/modifyExpiredPassword.page,
		  /passward/generateImageCode.page,
		  /common/jsp/tokenfail.jsp,/mobile/login.jsp
		  
    	   </param-value>
    </init-param>
    <init-param>
      <param-name>redirecturl</param-name>
      <param-value>/sysmanager/logoutredirect.jsp</param-value>
    </init-param>
    <init-param>
      <param-name>preventDispatchLoop</param-name>
      <param-value>false</param-value>
    </init-param>	
    <!-- 防止跨站请求过滤器相关参数开始 ，与安全认证过滤器结合使用 -->
		<!-- 防止跨站请求过滤器相关参数 bboss防止跨站请求过滤器的机制如下： 采用动态令牌和session相结合的方式产生客户端令牌，一次请求产生一个唯一令牌 
			令牌识别采用客户端令牌和服务端session标识混合的方式进行判别，如果客户端令牌和服务端令牌正确匹配，则允许访问，否则认为用户为非法用户并阻止用户访问并跳转到 
			redirectpath参数对应的地址，默认为/login.jsp。 令牌存储机制通过参数tokenstore指定，包括两种，内存存储和session存储，默认为session存储，当令牌失效（匹配后立即失效，或者超时失效）后，系统自动清除失效的令牌；采用session方式 
			存储令牌时，如果客户端页面没有启用session，那么令牌还是会存储在内存中。 令牌生命周期：客户端的令牌在服务器端留有存根，当令牌失效（匹配后立即失效，或者超时失效）后，系统自动清除失效的令牌； 
			当客户端并没有正确提交请求，会导致服务端令牌存根变为垃圾令牌，需要定时清除这些 垃圾令牌；如果令牌存储在session中，那么令牌的生命周期和session的生命周期保持一致，无需额外清除机制； 
			如果令牌存储在内存中，那么令牌的清除由令牌管理组件自己定时扫描清除，定时扫描时间间隔为由tokenscaninterval参数指定，单位为毫秒，默认为30分钟，存根保存时间由tokendualtime参数指定，默认为1个小时 
			可以通过enableToken参数配置指定是否启用令牌检测机制，true检测，false不检测，默认为false不检测 enableToken是否启用令牌检测机制，true 
			启用，false 不启用，默认为不启用 -->
		<init-param>
			<param-name>enableToken</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 指定动态令牌校验失败跳转地址
		如果没有指定直接采用redirecturl对应的地址作为跳转地址 -->
		<init-param>
		      <param-name>tokenfailpath</param-name>
		      <param-value>/common/jsp/tokenfail.jsp</param-value>
	    </init-param>
		<!-- 指定令牌存储机制，目前提供两种机制： mem：将令牌直接存储在内存空间中 session：将令牌存储在session中,如果对应的页面不存在session，则将token存储在内存中 
			默认存储在session中 -->
		<init-param>
			<param-name>tokenstore</param-name>
			<param-value>mem</param-value>
		</init-param>

		<!-- 内存令牌保留时间,默认为1小时（不检测），超过指定的时间，系统将自动清除超时的令牌，如果指定为-1将不检测 单位为毫秒 session中的令牌不受影响 -->
		<init-param>
			<param-name>tokendualtime</param-name>
			<param-value>3600000</param-value>
		</init-param>
		<!-- session中的令牌不受影响 内存令牌令牌超时检测时间间隔 单位为毫秒 默认为30分钟，一般只需要指定tokenscaninterval参数 
			如果需要检测，那么只要令牌持续时间超过tokendualtime 对应的令牌将会被清除 -->
		<init-param>
			<param-name>tokenscaninterval</param-name>
			<param-value>1800000</param-value>
		</init-param>
		<!-- 防止跨站请求过滤器相关参数结束 -->   
		<init-param>
			<param-name>enablePermissionCheck</param-name>
			<param-value>true</param-value>
		</init-param>
		 
		
		<init-param>
			<param-name>authorfailedurl</param-name>
			<param-value>/common/jsp/authorfail.jsp</param-value>
		</init-param>
		 
  </filter>

 
  <filter-mapping>
    <filter-name>securityFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>securityFilter</filter-name>
    <url-pattern>*.page</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>securityFilter</filter-name>
    <url-pattern>*.frame</url-pattern>
  </filter-mapping>
  
   <filter-mapping>
    <filter-name>securityFilter</filter-name>
    <url-pattern>/druid/*</url-pattern>
  </filter-mapping>

  <listener>
	<listener-class>com.frameworkset.filter.BSServletRequestListener</listener-class>
  </listener>
  <listener>
	<listener-class>com.frameworkset.platform.security.SessionListener</listener-class>
  </listener>	
  <servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>

		<!--
			For a complete list of Init Parameters, please see:
			http://code.google.com/p/kaptcha/wiki/ConfigParameters
		-->
		<init-param>
			<param-name>kaptcha.border</param-name>
			<param-value>no</param-value>
		</init-param>

		<init-param>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>black</param-value>
		</init-param>

		<init-param>
			<param-name>kaptcha.textproducer.char.space</param-name>
			<param-value>5</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.height</param-name>
			<param-value>50</param-value>
		</init-param>

		<init-param>
			<param-name>kaptcha.image.width</param-name>
			<param-value>200</param-value>
		</init-param>


	</servlet>

	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/Kaptcha.jpg</url-pattern>
	</servlet-mapping> 
	<servlet>
        <servlet-name>mvc</servlet-name>
        <servlet-class>org.frameworkset.web.servlet.DispatchServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/conf/appbom/bboss-*.xml,
            /WEB-INF/conf/commons/bboss-*.xml,
            /WEB-INF/conf/test/bboss-*.xml,
            /WEB-INF/conf/workflow/bboss-*.xml,
            /WEB-INF/conf/document/bboss-*.xml,
            /WEB-INF/conf/params/bboss-*.xml,
            /WEB-INF/conf/counter/bboss-*.xml,
            /WEB-INF/conf/channel/bboss-*.xml,
            /WEB-INF/conf/site/bboss-*.xml,
            /WEB-INF/conf/bboss-*.xml,
            /WEB-INF/conf/permission/bboss-*.xml,
            /WEB-INF/conf/sanylog/bboss-*.xml,
            /WEB-INF/conf/dictionary/bboss-*.xml
            </param-value>
        </init-param>
        <init-param>
			<param-name>messagesources</param-name>
			<param-value>/WEB-INF/messages_pdp,/WEB-INF/messages_pdp_common,/WEB-INF/conf/appbom/messages_appbom</param-value>
		</init-param>
		<init-param>
			<param-name>useCodeAsDefaultMessage</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
    </servlet>
	 <servlet-mapping>
        <servlet-name>mvc</servlet-name>
        <url-pattern>*.page</url-pattern>
    </servlet-mapping>
    <!-- freepage这种地址securityFilter安全认证过流器将不拦截，安全放行，如果无需任何会话信息
    可以将请求后缀定义为freepage
     -->
	 <servlet-mapping>
        <servlet-name>mvc</servlet-name>
        <url-pattern>*.freepage</url-pattern>
    </servlet-mapping>
	

  <servlet>
    <servlet-name>frameworkset</servlet-name>
    <servlet-class>com.frameworkset.platform.framework.FrameworkServlet</servlet-class>
	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>frameworkset</servlet-name>
    <url-pattern>*.frame</url-pattern>
  </servlet-mapping>


	<servlet>
  <display-name>RPCHttpServLet</display-name>
  <servlet-name>RPCHttpServLet</servlet-name>
  <servlet-class>org.frameworkset.spi.remote.http.RPCHttpServLet</servlet-class>
 </servlet>
 <servlet-mapping>
  <servlet-name>RPCHttpServLet</servlet-name>
  <url-pattern>*.rpc</url-pattern>
 </servlet-mapping>
 <servlet> 
<servlet-name>DruidStatView</servlet-name> 
<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class> 
</servlet>

<servlet-mapping> 
<servlet-name>DruidStatView</servlet-name> 
<url-pattern>/druid/*</url-pattern> 
</servlet-mapping>
 <servlet>
		<display-name>cxf</display-name>
		<servlet-name>cxf</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.RPCCXFServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cxf</servlet-name>
		<url-pattern>/cxfservices/*</url-pattern>
	</servlet-mapping>
	<!-- jasperreport begin  -->
<servlet>
	<servlet-name>JasperPrintServlet</servlet-name>
	<servlet-class>
		com.frameworkset.platform.epp.reportmanage.JasperReport.JasperPrintServlet
	</servlet-class>
</servlet>
<servlet-mapping>
	<servlet-name>JasperPrintServlet</servlet-name>
	<url-pattern>/jasperreport/print</url-pattern>
</servlet-mapping>


<servlet>
		<servlet-name>PdfServlet</servlet-name>
		<servlet-class>
			com.frameworkset.platform.epp.reportmanage.JasperReport.PdfServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PdfServlet</servlet-name>
		<url-pattern>/jasperreport/pdf</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>XlsServlet</servlet-name>
		<servlet-class>
			com.frameworkset.platform.epp.reportmanage.JasperReport.XlsServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>XlsServlet</servlet-name>
		<url-pattern>/jasperreport/xls</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ImageServlet</servlet-name>
		<servlet-class>
			net.sf.jasperreports.j2ee.servlets.ImageServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ImageServlet</servlet-name>
		<url-pattern>/jasperreport/image</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>RtfServlet</servlet-name>
		<servlet-class>com.frameworkset.platform.epp.reportmanage.JasperReport.RtfServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RtfServlet</servlet-name>
		<url-pattern>/jasperreport/rtf</url-pattern>
	</servlet-mapping>
	
	<servlet> 
         <servlet-name>Admin</servlet-name> 
         <servlet-class>org.logicalcobwebs.proxool.admin.servlet.AdminServlet</servlet-class> 
     </servlet> 
 
     <servlet-mapping> 
         <servlet-name>Admin</servlet-name> 
         <url-pattern>/Admin</url-pattern> 
     </servlet-mapping> 
  
  	<!--jasperreport end -->
	
<!-- jasperreport end  -->
  	<!-- end -->
  	<!-- 
  	<servlet>
	    <servlet-name>rmiload</servlet-name>
	    <servlet-class>com.frameworkset.platform.esb.rmi.RMIServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
  	</servlet>
 -->
  <welcome-file-list>
    <welcome-file>welcome.jsp</welcome-file>
  </welcome-file-list>
  
  <error-page>
  	<exception-type>com.frameworkset.platform.security.SessionTimeoutExcetpion</exception-type>
  	<location>/sysmanager/logoutredirect.jsp</location>
  </error-page> 
  
  <error-page>
	<error-code>500</error-code>
	<location>/common/jsp/error.jsp</location>
  </error-page>
  
   <error-page>
	<error-code>503</error-code>
	<location>/common/jsp/error.jsp</location>
  </error-page>
  

  
  	<security-constraint>
		<web-resource-collection>
			<url-pattern>/*</url-pattern>
			<http-method>PUT</http-method>
			<http-method>HEAD</http-method>
			<http-method>OPTIONS</http-method>
		</web-resource-collection>
		<auth-constraint>
		</auth-constraint>
	</security-constraint>
	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>
	<session-config>
		<session-timeout>-1</session-timeout>
	</session-config>  
</web-app>
